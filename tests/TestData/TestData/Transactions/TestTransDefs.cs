namespace Linn.Stores2.TestData.Transactions
{
    using Linn.Stores2.Domain.LinnApps.Accounts;
    using Linn.Stores2.Domain.LinnApps.Requisitions;

    public static class TestTransDefs
    {
        public static readonly StoresTransactionDefinition SuppToMatVarTrans =
            new StoresTransactionDefinition
                {
                TransactionCode = "SUMVI",
                Description = "Supplier Material Variance",
                OntoTransactions = "N",
                StockAllocations = "N",
                DecrementTransaction = "N",
                TakePriceFrom = "M",
                RequiresAuth = "N"
            };

        public static readonly StoresTransactionDefinition LinnDeptToStock =
            new StoresTransactionDefinition
                {
                TransactionCode = "LDSTR",
                Description = "Onto Transaction",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "M",
                RequiresAuth = "N"
            };

        public static readonly StoresTransactionDefinition StockToLinnDept =
            new StoresTransactionDefinition
                {
                TransactionCode = "STLDI",
                Description = "From Transaction",
                StockAllocations = "Y",
                OntoTransactions = "N",
                DecrementTransaction = "N",
                TakePriceFrom = "P",
                RequiresAuth = "Y",
                AuthOpCode = "AUTH"
            };

        // used in BOOKWO function to decrement stock
        public static readonly StoresTransactionDefinition DecrementToLinnDept =
            new StoresTransactionDefinition
                {
                TransactionCode = "STLDI2",
                Description = "DECREMENT FROM WORKSTATION TO LINN DEPT",
                StockAllocations = "Y",
                OntoTransactions = "N",
                DecrementTransaction = "Y",
                TakePriceFrom = "M",
                RequiresAuth = "N"
            };

        // Generated by BOOKSU function to book material into stock
        public static readonly StoresTransactionDefinition SupplierToStores =
            new StoresTransactionDefinition
                {
                TransactionCode = "SUSTI",
                Description = "SUPPLIER TO STORES GOODS IN",
                StockAllocations = "N",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "O",
                RequiresAuth = "N",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "SUSTI" },
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "SUSTI" }
                }
            };

        // Generated by BOOKSU function when booking in and when price is less than std price
        public static readonly StoresTransactionDefinition MaterialVarianceBelowStd =
            new StoresTransactionDefinition
                {
                TransactionCode = "SUMVI",
                Description = "BOOK MATERIAL VARIANCE FROM PURCHASE ORDER (LT STD",
                StockAllocations = "N",
                OntoTransactions = "N",
                DecrementTransaction = "N",
                TakePriceFrom = "M",
                RequiresAuth = "N",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "SUSTI" },
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "SUSTI", Nominal = new Nominal("00000012926", "MATERIAL PRICE VARIANCES") }
                }
            };

        // Generated by BOOKSU function to book material into stock in QC state
        public static readonly StoresTransactionDefinition SupplierToQC =
            new StoresTransactionDefinition
            {
                TransactionCode = "SUGII",
                Description = "BOOK GOODS INTO INSPECTION FROM A SUPPLIER",
                StockAllocations = "N",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "O",
                RequiresAuth = "N",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "SUGII" },
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "SUGII" }
                }
            };

        // Generated by BOOKSU function when booking in and non stock controlled
        public static readonly StoresTransactionDefinition SupplierToNowhere =
            new StoresTransactionDefinition
            {
                TransactionCode = "SUNWI",
                Description = "DECREMENT USED COMPONENTS FROM SUPPLIER STORE",
                StockAllocations = "N",
                OntoTransactions = "N",
                DecrementTransaction = "N",
                TakePriceFrom = "p",
                RequiresAuth = "N",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "SUSTI" },
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "SUSTI", Nominal = new Nominal("00000012926", "MATERIAL PRICE VARIANCES") }
                }
            };

        // Generated by SUKIT function when kitting stock to supplier kit
        public static readonly StoresTransactionDefinition StockToSupplierKit =
            new StoresTransactionDefinition
                {
                TransactionCode = "STSUK",
                Description = "KIT PARTS TO SUPPLIER AGAINST PO",
                StockAllocations = "Y",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "P",
                RequiresAuth = "N"
            };

        // Generated by LOAN OUT when booking out
        public static readonly StoresTransactionDefinition StockToLoan =
            new StoresTransactionDefinition
                {
                TransactionCode = "STLOI",
                Description = "MOVE LOAN PRODUCT FROM STORES TO LOAN ACCOUNT",
                StockAllocations = "Y",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "P",
                RequiresAuth = "Y",
                AuthOpCode = "AUTH"
            };

        // Generated by Adjust
        public static readonly StoresTransactionDefinition AdjustToStock =
            new StoresTransactionDefinition
            {
                TransactionCode = "ADSTI",
                Description = "Onto Adjust",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "M",
                RequiresAuth = "N",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "ADSTI" },
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "ADSTI", Nominal = new Nominal("0000004710", "STOCK ADJUSTMENTS") }
                }
            };

        public static readonly StoresTransactionDefinition StockToAdjust =
            new StoresTransactionDefinition
            {
                TransactionCode = "STADI",
                Description = "From Adjust",
                StockAllocations = "Y",
                OntoTransactions = "N",
                DecrementTransaction = "N",
                TakePriceFrom = "P",
                RequiresAuth = "Y",
                AuthOpCode = "STORESAUTH",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "STADI" },
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "STADI", Nominal = new Nominal("0000004710", "STOCK ADJUSTMENTS") }
                }
            };

        // Generated by Write OFf
        public static readonly StoresTransactionDefinition WriteOn =
            new StoresTransactionDefinition
            {
                TransactionCode = "WOSTI",
                Description = "Write On",
                OntoTransactions = "Y",
                DecrementTransaction = "N",
                TakePriceFrom = "M",
                RequiresAuth = "Y",
                AuthOpCode = "STORESAUTH",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "WOSTI" },
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "WOSTI", Nominal = new Nominal("0000004729", "STOCK WRITE OFF") }
                }
            };

        public static readonly StoresTransactionDefinition WriteOff =
            new StoresTransactionDefinition
            {
                TransactionCode = "STWOI",
                Description = "Write Off",
                StockAllocations = "Y",
                OntoTransactions = "N",
                DecrementTransaction = "N",
                TakePriceFrom = "P",
                RequiresAuth = "Y",
                AuthOpCode = "STORESAUTH",
                StoresTransactionPostings = new List<StoresTransactionPosting>
                {
                    new StoresTransactionPosting() { DebitOrCredit = "C", TransactionCode = "STWOI" },
                    new StoresTransactionPosting() { DebitOrCredit = "D", TransactionCode = "STWOI", Nominal = new Nominal("0000004729", "STOCK WRITE OFF") }
                }
            };
    }
}
